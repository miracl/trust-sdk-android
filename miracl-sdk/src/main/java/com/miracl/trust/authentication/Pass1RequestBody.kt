package com.miracl.trust.authentication

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
internal data class Pass1RequestBody(
    @SerialName("mpin_id") val mpinId: String,
    @SerialName("U") val U: String,
    @SerialName("dtas") val dtas: String,
    @SerialName("scope") val scope: Array<String>,
    @SerialName("publicKey") val publicKey: String?
) {
    companion object {
        private const val AUTOGENERATED_MULTIPLIER = 31
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Pass1RequestBody

        if (mpinId != other.mpinId) return false
        if (U != other.U) return false
        if (dtas != other.dtas) return false
        if (!scope.contentEquals(other.scope)) return false
        if (publicKey != other.publicKey) return false

        return true
    }

    override fun hashCode(): Int {
        var result = mpinId.hashCode()
        result = AUTOGENERATED_MULTIPLIER * result + U.hashCode()
        result = AUTOGENERATED_MULTIPLIER * result + dtas.hashCode()
        result = AUTOGENERATED_MULTIPLIER * result + scope.contentHashCode()
        result = AUTOGENERATED_MULTIPLIER * result + (publicKey?.hashCode() ?: 0)
        return result
    }
}