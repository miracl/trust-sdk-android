import org.jetbrains.dokka.gradle.DokkaTask

plugins {
    alias libs.plugins.android.library
    alias libs.plugins.androidx.room
    alias libs.plugins.kotlin.android
    alias libs.plugins.kotlin.serialization
    alias libs.plugins.ksp
    alias libs.plugins.dokka
    alias libs.plugins.binary.compatibility.validator
    alias libs.plugins.maven.publish
    alias libs.plugins.jreleaser
}

version = '1.8.0'

android {
    namespace 'com.miracl.trust'
    compileSdkVersion 36

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 36
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_TOOLCHAIN=clang", "-DANDROID_STL=c++_static"
                cppFlags "-fexceptions  -std=c++11"
            }
        }

        room {
            schemaDirectory "$projectDir/schemas"
        }

        Properties properties = new Properties()
        def propertiesFile = project.rootProject.file('miracltrust.properties')
        if (propertiesFile.exists()) {
            properties.load(propertiesFile.newDataInputStream())
        }

        buildConfigField "String", "VERSION_NAME", "\"$version\""
    }

    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }

    testOptions {
        unitTests {
            all {
                if (it.name == 'testReleaseUnitTest') {
                    exclude "com/miracl/trust/network/HttpURLConnectionApiManagerUnitTest.class"
                }
            }
        }

        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField "String", "CUV_PROJECT_ID", "\"${project.getProperties().get('miracltrust.cuvProjectId')}\""
            buildConfigField "String", "CUV_PROJECT_URL", "\"${project.getProperties().get('miracltrust.cuvProjectUrl')}\""
            buildConfigField "String", "CUV_CLIENT_ID", "\"${project.getProperties().get('miracltrust.cuvClientId')}\""
            buildConfigField "String", "CUV_CLIENT_SECRET", "\"${project.getProperties().get('miracltrust.cuvClientSecret')}\""

            buildConfigField "String", "DV_PROJECT_ID", "\"${project.getProperties().get('miracltrust.dvProjectId')}\""
            buildConfigField "String", "DV_PROJECT_URL", "\"${project.getProperties().get('miracltrust.dvProjectUrl')}\""

            buildConfigField "String", "ECV_PROJECT_ID", "\"${project.getProperties().get('miracltrust.ecvProjectId')}\""
            buildConfigField "String", "ECV_PROJECT_URL", "\"${project.getProperties().get('miracltrust.ecvProjectUrl')}\""
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            version "3.30.5"
        }
    }

    kotlin {
        explicitApi = "strict"
    }

    dokkaGfm {
        outputDirectory.set(new File(rootProject.buildDir, "documentation"))
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        buildConfig true
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation libs.junit
    testImplementation libs.mockk

    androidTestImplementation libs.androidx.test.core
    androidTestImplementation libs.androidx.test.runner

    // Kotlin Coroutines
    implementation libs.kotlinx.coroutines.android
    testImplementation libs.kotlinx.coroutines.test
    androidTestImplementation libs.kotlinx.coroutines.test

    // JSON
    implementation libs.kotlinx.serialization

    // Room Database
    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.ktx
    ksp libs.androidx.room.compiler
    androidTestImplementation libs.androidx.room.testing

    // Database encrypting
    implementation libs.android.database.sqlcipher

    // Test JWT verification
    androidTestApi(libs.jjwt.api)
    androidTestRuntimeOnly(libs.jjwt.impl)
    androidTestRuntimeOnly(libs.jjwt.orgjson) {
        exclude(group: 'org.json', module: 'json') // Provided by Android natively
    }

    androidTestImplementation project(':utilities')
}

apiValidation {
    ignoredClasses += [
            "com.miracl.trust.BuildConfig",
            "com.miracl.trust.storage.room.UserDatabase_Impl",
            "com.miracl.trust.storage.room.dao.UserDao_Impl"
    ]
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.miracl'
            artifactId = 'trust-sdk-android'
            version = version

            afterEvaluate {
                from components.release
            }

            pom {
                name = 'com.miracl:trust-sdk-android'
                description = 'MIRACL Trust SDK for Android'
                url = 'https://github.com/miracl/trust-sdk-android'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'MIRACL'
                        email = 'support@miracl.com'
                        organization = 'MIRACL'
                        organizationUrl = 'https://miracl.com/'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/miracl/trust-sdk-android.git'
                    developerConnection = 'scm:git:ssh://github.com:miracl/trust-sdk-android.git'
                    url = 'https://github.com/miracl/trust-sdk-android'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
        publicKey = System.getenv("GPG_PUBLIC_KEY")
        secretKey = System.getenv("GPG_SECRET_KEY")
        passphrase = System.getenv("GPG_PASSPHRASE")
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    applyMavenCentralRules = false
                    sign = true
                    username = System.getenv("MAVEN_CENTRAL_USERNAME")
                    password = System.getenv("MAVEN_CENTRAL_PASSWORD")
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}

tasks.withType(DokkaTask.class).configureEach {
    String dokkaBaseConfiguration = """
    {
      "customAssets": ["${file("assets/logo-icon.svg")}"]
    }
    """
    pluginsMapConfiguration.set(
            ["org.jetbrains.dokka.base.DokkaBase": dokkaBaseConfiguration]
    )
}
